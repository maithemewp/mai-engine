.content {
	--columns: 0; // Fallback for single entries. Using 1 broke alignfull.
}

.entries {
	margin-bottom: var(--entries-margin-bottom, var(--spacing-lg));

	--entry-image-line-height: 0;
	--entry-meta-margin: 0 0 var(--spacing-md) 0;
}

.entries-wrap {
	display: flex;
	flex-wrap: wrap;
	align-items: var(--align-columns-vertical, unset);
	justify-content: var(--align-columns);
	width: calc(100% + var(--column-gap));
	max-width: var(--entries-wrap-max-width, calc(100% + var(--column-gap)));
	margin: calc(var(--row-gap) * -1) 0 0 calc(var(--column-gap) * -1);

	--entry-margin: var(--row-gap) 0 0 var(--column-gap);

	@include mq(false, sm) {
		--columns: var(--columns-xs);
	}

	@include mq(sm, md) {
		--columns: var(--columns-sm);
	}

	@include mq(md, lg) {
		--columns: var(--columns-md);
	}

	@include mq(lg) {
		--columns: var(--columns-lg);
	}
}

.entry {
	position: var(--entry-position, static);
	display: var(--entry-display, flex);
	flex: var(--entry-flex, 1 1 calc((100% / var(--columns)) - var(--column-gap)));
	flex-direction: var(--entry-flex-direction, column);
	flex-wrap: var(--entry-flex-wrap, nowrap);
	width: var(--entry-width, auto); /* allows "auto" columns in grid and archives */
	max-width: var(--entry-max-width, calc((100% / var(--columns)) - var(--column-gap)));
	margin: var(--entry-margin, 0);
	padding: var(--entry-padding, 0);
	overflow: var(--entry-overflow, unset);
	text-align: var(--align-text, inherit);
	background: var(--entry-background, unset);
	border: var(--entry-border, 0);
	border-radius: var(--entry-border-radius, var(--border-radius));
	box-shadow: var(--entry-box-shadow, unset);
}

.has-image-background {
	--entry-flex-direction: row;
	--entry-overflow: hidden; /* for border radius on absolute positioned image. */
}

[class*="has-image-left"],
[class*="has-image-right"] {
	--entry-flex-direction: row;
}

.has-boxed {
	--entry-background: var(--color-white);
	--entry-border: var(--border);
	--entry-box-shadow: var(--shadow);
	--entry-overflow: hidden;
}

.has-boxed:not([class*="has-image-left-full"]):not([class*="has-image-right-full"]) {
	--entry-wrap-padding: var(--spacing-lg); /* Must be a single value for use in calc() full "full" images */
}

.has-image-background,
.has-boxed.has-image-left-full,
.has-boxed.has-image-right-full {
	--entry-wrap-padding: var(--spacing-lg);
}

.entry-wrap {
	display: flex;
	flex: 1; /* 1 1 100% breaks image-left/right-full */
	flex-direction: column;
	justify-content: var(--align-text-vertical);
	width: var(--entry-wrap-width, 100%);
	margin: var(--entry-wrap-margin, 0 auto);
	padding: var(--entry-wrap-padding, 0);
	color: var(--entry-wrap-color, inherit);
	background: var(--entry-wrap-background, transparent);
	border: var(--entry-wrap-border, unset);
	border-radius: var(--entry-wrap-border-radius, unset);
	box-shadow: var(--entry-wrap-box-shadow, unset);
	transition: all 0.3s ease-in-out;

	> *:not(.entry-overlay) {
		z-index: 1;
	}
}

.widget {
	--entry-width: 100%;
	--entry-wrap-padding: 0;
}

@include mq(false, sm) {

	.has-image-stack {
		--entry-flex-direction: column;
		--entry-flex-wrap: nowrap;
		--entry-image-link-max-width: 100%;
		--entry-image-link-flex: initial;
		--entry-image-link-before-display: none;

		// Needs to be more specific to intercept alternating images.
		.entry-image-link {
			--entry-image-link-order: -1;
		}

		.entries-wrap:not(.has-boxed) & {
			--entry-image-link-margin: 0 0 var(--spacing-md);
		}
	}
}

// Mai Testimonials.
.entry-byline,
.entry-website {
	display: block;
	margin-top: var(--spacing-xs);
	font-weight: var(--body-font-weight);
	font-size: var(--font-size-sm);
	font-family: var(--body-font-family);
}
