@import "abstracts/_index";
@import "base/form";
@import "base/globals";
@import "base/heading";
@import "base/list";
@import "base/table";
@import "base/typography";
@import "components/blocks/_index-editor";
@import "components/entry/_index";
@import "utilities/_index";

html {
	font-size: 100%; // 16px browser default.
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

body {
	min-height: auto;
	background: var(--color-white);

	--viewport-width: calc(100vw - var(--admin-menu-width, 160px) - var(--block-sidebar-width, 0px)); // Requires 0px for calc().
	--body-background-color: var(--color-white);
	--list-style-position: outside;
	--list-padding: 0 0 var(--spacing-lg) var(--spacing-xl); // Adds list indent/spacing without affecting block layout.
	--list-item-margin-bottom: var(--spacing-xs);

	@include body();
}

.edit-post-visual-editor__post-title-wrapper {
	margin-bottom: var(--spacing-md); // this element is using var(--wp--style--block-gap) which is not defined in this non-FSE theme.
}

.editor-post-title__block .editor-post-title__input {

	@include heading;
}

p {
	font-size: var(--font-size-md);
}

.block-editor-block-list__block .block-list-appender.block-list-appender {
	// These are 0 in WP so the appender isn't centered by default.
	margin-right: auto;
	margin-left: auto;
}

.block-editor-plain-text {
	/* TODO: Make this work if body color is set to white. */
	/* TODO: --input-color: #000; is necessary when this happens as well. */
	color: var(--color-body); /* Overrides WP core styles. Mostly for dark backgrounds when the text is changed to white. */
}

.has-dark-background {
	color: var(--color-white);
	--heading-color: var(--color-white);
}

.has-light-background {
	color: var(--color-body);
	--heading-color: var(--color-heading);
}

.alignfull {
	width: 100%;
	max-width: 100%;
	margin-right: 0;
	margin-left: 0;
}

.wp-block.is-reusable {
	max-width: unset !important;
	margin-right: 0;
	margin-left: 0;
}

[data-content-align="start"] {
	margin-inline-start: 0;
}

[data-content-align="end"] {
	margin-inline-end: 0;
}

[data-type="core/pullquote"][data-align="left"],
[data-type="core/pullquote"][data-align="right"] {
	max-width: 290px; // Match WP core front end styles.
	overflow: hidden;
}

[data-type="core/pullquote"][data-align="left"] {
	float: left;
}

[data-type="core/pullquote"][data-align="right"] {
	float: right;
}

.block-editor-block-list__layout {

	> [data-type="core/group"],
	> [data-type="core/cover"],
	> [data-type="acf/mai-post-grid"] {
		margin-top: 0;
		margin-bottom: 0;
	}
}

.wp-block[data-align="full"] > .wp-block-group {
	padding-right: var(--side-spacing);
	padding-left: var(--side-spacing);
}

.wp-block[data-align="full"] > .wp-block-cover {
	padding-right: var(--side-spacing);
	padding-left: var(--side-spacing);
}

[data-content-align="start"] {
	--group-block-justify-content: flex-start;
	--cover-block-justify-content: flex-start;

	> .wp-block-group__inner-container > .wp-block,
	> .wp-block-cover__inner-container > .wp-block {
		margin-left: unset;
	}
}

[data-content-align="center"] {
	--group-block-justify-content: center;
	--cover-block-justify-content: center;
}

[data-content-align="end"] {
	--group-block-justify-content: flex-end;
	--cover-block-justify-content: flex-end;

	> .wp-block-group__inner-container > .wp-block,
	> .wp-block-cover__inner-container > .wp-block {
		margin-right: unset;
	}
}

/**
 * This is padding on enableLayoutSettingsBlocks.
 *
 * 'core/cover',
 * 'core/group',
 */
@each $padding-name, $padding-size in $padding_scale {

	@each $padding-setting in $padding_settings {

		.wp-block-cover[data-spacing-#{ $padding-setting }="#{ $padding-name }"],
		.wp-block-group[data-spacing-#{ $padding-setting }="#{ $padding-name }"] {
			padding-#{ $padding-setting }: #{ $padding-size } !important;
		}
	}
}

/**
 * Max width on enableMaxWidthSettingsBlocks.
 *
 * 'core/heading',
 * 'core/paragraph',
 *
 * and enableLayoutSettingsBlocks.
 *
 * 'core/cover',
 * 'core/group',
 */
@each $breakpoint-name, $breakpoint-size in $breakpoints {

	[data-type="core/heading"][data-max-width="#{ $breakpoint-name }"],
	[data-type="core/paragraph"][data-max-width="#{ $breakpoint-name }"] {
		--wp-block-max-width: var(--breakpoint-#{ $breakpoint-name });
	}

	// We don't need to worry about nested block here,
	// since their content should never be larger than the parent.
	[data-content-width="#{ $breakpoint-name }"] {
		--content-max-width: var(--breakpoint-#{ $breakpoint-name });
		--wp-block-max-width: var(--breakpoint-#{ $breakpoint-name });
	}
}

[data-content-width="no"] {
	--content-max-width: var(--viewport-width);
	--wp-block-max-width: var(--viewport-width);
	--side-spacing: 0;
}

/**
 * This is margin on enableSpacingSettingsBlocks.
 *
 * 'core/heading',
 * 'core/paragraph',
 * 'core/separator',
 */
@each $margin-name, $margin-size in $spacing {

	@each $margin-setting in $margin_settings {

		.wp-block-heading[data-spacing-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-paragraph[data-spacing-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-separator[data-spacing-#{ $margin-setting }="#{ $margin-name }"] {
			--heading-margin-#{ $margin-setting }: #{ $margin-size };
			--separator-block-margin-#{ $margin-setting }: #{ $margin-size };
			--paragraph-margin-#{ $margin-setting }: #{ $margin-size };
		}
	}
}

/**
 * This is margin on enableMarginSettingsBlocks.
 *
 * 'core/image',
 * 'core/cover',
 * 'core/group',
 */
@each $margin-name, $margin-size in $margin {

	@each $margin-setting in $margin_settings {

		.wp-block-image[data-margin-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-cover[data-margin-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-group[data-margin-#{ $margin-setting }="#{ $margin-name }"] {
			margin-#{ $margin-setting }: #{ $margin-size } !important;
		}
	}
}

/**
 * This is negative margin on enableMarginSettingsBlocks.
 *
 * 'core/image',
 * 'core/cover',
 * 'core/group',
 */
@each $margin-name, $margin-size in $negative_margin {

	@each $margin-setting in $margin_settings {

		.wp-block-image[data-margin-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-cover[data-margin-#{ $margin-setting }="#{ $margin-name }"],
		.wp-block-group[data-margin-#{ $margin-setting }="#{ $margin-name }"] {
			margin-#{ $margin-setting }: calc(#{ $margin-size } * -1) !important;
		}
	}
}

@each $margin-setting in $margin_settings {

	[data-margin-#{ $margin-setting }="no"] {
		margin-#{ $margin-setting }: 0 !important;
	}
}

@each $size-name, $size-value in $font-sizes {

	[data-font-size="#{ $size-name }"] > .rich-text {
		font-size: #{ $size-value };
	}
}

// Our default of 0 left/right margin caused overlap in editor.
.wp-block-image {
	margin-right: auto;
	margin-left: auto;
}

// button, // This breaks core block control buttons.
input[type="submit"],
.wp-block-button__link,
.wp-block .button {
	min-height: 1px; // Makes sure block styles are rendered correctly in editor. See #303.

	@include button(true);

	// Default block style preview.
	.is-style-default & {

		@include button(true);
	}

	&:active,
	&:visited {
		color: var(--button-color-hover, var(--button-color));
	}

	.is-style-secondary & {

		@include button-style("secondary", true);
	}

	.is-style-link & {

		@include button-style("link", true);
	}

	.is-style-outline & {

		@include button-style("outline", true);
	}

	.button-small & {

		@include button-style("small");
	}

	.button-large & {

		@include button-style("large");
	}
}

// Remove default spacing on .wp-block from classic.css in WP core.
.mai-divider {
	margin-top: -28px;
	margin-bottom: -28px;
}

.wp-block-search {

	// When no alignment is set the wp-block is the same as the search block.
	// When you set alignment it adds wp-block as a wrapper. Strange.
	&.wp-block {
		margin-right: auto;
		margin-left: auto;
	}

	.wp-block[data-align="left"] & {
		justify-content: flex-start;
	}

	.wp-block[data-align="center"] & {
		justify-content: center;
	}

	.wp-block[data-align="right"] & {
		justify-content: flex-end;
	}

	.wp-block-search__input {
		width: auto;
		min-width: var(--search-input-min-width, 0);
		max-width: var(--search-input-max-width, 320px);
		font-size: var(--font-size-md);
		-webkit-appearance: none;
	}

	.wp-block-search__button {
		height: auto !important;

		@include button(true);
		@include button-style("secondary", true);

		&.has-icon {
			position: relative;
			height: 100%;

			svg {
				position: absolute;
				top: calc(50% - 12px);
				left: calc(50% - 12px);
				width: 24px;
				height: 24px;
				fill: currentColor;
			}
		}
	}
}

.mai-grid a {
	pointer-events: none;
}

// Mai Columns.

.mai-column {
	display: flex;
	flex-direction: column;
	justify-content: var(--justify-content, flex-start);
}

.mai-column .block-editor-block-list__layout[data-is-drop-zone="true"]:empty {
	position: relative;
	width: 100%;
	height: 36px;
	box-shadow: inset 0 0 0 1px var(--mai-block-appender-color, #1e1e1e);
}

// This is only needed if you delete the empty "Type / to choose a block" element from the column.
.mai-column .block-editor-block-list__layout[data-is-drop-zone="true"]:empty::after {
	position: absolute;
	top: 0;
	left: 0;
	display: flex;
	align-items: center;
	justify-content: center;
	width: 100%;
	height: 100%;
	color: var(--mai-block-appender-color, #1e1e1e);
	font-size: 24px;
	content: "+";
}

.mai-column .block-editor-block-list__layout[data-is-drop-zone="true"]:empty:hover,
.mai-column .block-editor-block-list__layout[data-is-drop-zone="true"]:empty:focus {
	--mai-block-appender-color: var(--wp-admin-theme-color);
	cursor: pointer;
}

.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .block-list-appender {
	flex: 1 1 100%;
	margin: 16px 0 16px var(--column-gap);
}

.block-list-appender__toggle[aria-label$="Mai Column"] {
	position: relative;
}

.block-list-appender__toggle[aria-label$="Mai Column"]::after {
	position: absolute;
	top: 50%;
	left: calc(100% + 10px);
	display: block;
	width: 200px;
	text-align: left;
	transform: translateY(-50%);
	content: attr(aria-label);
}

// Columns.

.has-columns:not(.has-columns-nested),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout {
	display: flex;
	flex-wrap: wrap;
	gap: var(--row-gap) var(--column-gap);
	align-items: var(--align-columns-vertical, unset);
	justify-content: var(--align-columns, unset);

	@include mq(false, sm) {
		--columns: var(--columns-xs);
	}

	@include mq(sm, md) {
		--columns: var(--columns-sm);
	}

	@include mq(md, lg) {
		--columns: var(--columns-md);
	}

	@include mq(lg) {
		--columns: var(--columns-lg);
	}

	// --flex-default: 0 0 calc((100% / var(--columns)) - var(--column-gap));
	--flex-default: 0 0 calc((100% / var(--columns) - ((var(--columns) - 1) / var(--columns) * var(--column-gap))));
	--flex-1: var(--flex-xs-1, var(--flex-xs, var(--flex-default)));
	--flex-2: var(--flex-xs-2, var(--flex-xs, var(--flex-default)));
	--flex-3: var(--flex-xs-3, var(--flex-xs, var(--flex-default)));
	--flex-4: var(--flex-xs-4, var(--flex-xs, var(--flex-default)));
	--flex-5: var(--flex-xs-5, var(--flex-xs, var(--flex-default)));
	--flex-6: var(--flex-xs-6, var(--flex-xs, var(--flex-default)));
	--flex-7: var(--flex-xs-7, var(--flex-xs, var(--flex-default)));
	--flex-8: var(--flex-xs-8, var(--flex-xs, var(--flex-default)));
	--flex-9: var(--flex-xs-9, var(--flex-xs, var(--flex-default)));
	--flex-10: var(--flex-xs-10, var(--flex-xs, var(--flex-default)));
	--flex-11: var(--flex-xs-11, var(--flex-xs, var(--flex-default)));
	--flex-12: var(--flex-xs-12, var(--flex-xs, var(--flex-default)));
	--flex-13: var(--flex-xs-13, var(--flex-xs, var(--flex-default)));
	--flex-14: var(--flex-xs-14, var(--flex-xs, var(--flex-default)));
	--flex-15: var(--flex-xs-15, var(--flex-xs, var(--flex-default)));
	--flex-16: var(--flex-xs-16, var(--flex-xs, var(--flex-default)));
	--flex-17: var(--flex-xs-17, var(--flex-xs, var(--flex-default)));
	--flex-18: var(--flex-xs-18, var(--flex-xs, var(--flex-default)));
	--flex-19: var(--flex-xs-19, var(--flex-xs, var(--flex-default)));
	--flex-20: var(--flex-xs-20, var(--flex-xs, var(--flex-default)));
	--flex-21: var(--flex-xs-21, var(--flex-xs, var(--flex-default)));
	--flex-22: var(--flex-xs-22, var(--flex-xs, var(--flex-default)));
	--flex-23: var(--flex-xs-23, var(--flex-xs, var(--flex-default)));
	--flex-24: var(--flex-xs-24, var(--flex-xs, var(--flex-default)));
}

// Column.

.has-columns:not(.has-columns-nested) > .is-column,
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block {
	flex: var(--flex, var(--flex-xs, var(--flex-default)));
	order: var(--order, unset);
	margin: 0; /* overrides core editor margin on wp-block */

	@include mq(false, sm) {
		--order: var(--order-xs, unset);
	}

	@include mq(sm, md) {
		--flex: var(--flex-sm, var(--flex-default));
		--order: var(--order-sm, unset);
	}

	@include mq(md, lg) {
		--flex: var(--flex-md, var(--flex-default));
		--order: var(--order-md, unset);
	}

	@include mq(lg) {
		--flex: var(--flex-lg, var(--flex-default));
	}
}

.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block > .acf-block-component,
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block > .acf-block-component > div,
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block > .acf-block-component > div > .is-column,
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block > .acf-block-component > div > .acf-block-preview,
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block > .acf-block-component > div > .acf-block-preview > .is-column {
	height: 100%;
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(1),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(1) {
	--flex: var(--flex-1);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(2),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(2) {
	--flex: var(--flex-2);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(3),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(3) {
	--flex: var(--flex-3);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(4),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(4) {
	--flex: var(--flex-4);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(5),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(5) {
	--flex: var(--flex-5);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(6),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(6) {
	--flex: var(--flex-6);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(7),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(7) {
	--flex: var(--flex-7);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(8),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(8) {
	--flex: var(--flex-8);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(9),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(9) {
	--flex: var(--flex-9);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(10),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(10) {
	--flex: var(--flex-10);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(11),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(11) {
	--flex: var(--flex-11);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(12),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(12) {
	--flex: var(--flex-12);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(13),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(13) {
	--flex: var(--flex-13);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(14),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(14) {
	--flex: var(--flex-14);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(15),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(15) {
	--flex: var(--flex-15);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(16),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(16) {
	--flex: var(--flex-16);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(17),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(17) {
	--flex: var(--flex-17);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(18),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(18) {
	--flex: var(--flex-18);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(19),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(19) {
	--flex: var(--flex-19);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(20),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(20) {
	--flex: var(--flex-20);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(21),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(21) {
	--flex: var(--flex-21);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(22),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(22) {
	--flex: var(--flex-22);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(23),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(23) {
	--flex: var(--flex-23);
}

.has-columns:not(.has-columns-nested) > .is-column:nth-child(24),
.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout > .wp-block:nth-child(24) {
	--flex: var(--flex-24);
}

@include mq(sm, md) {

	.has-columns:not(.has-columns-nested) > .is-column,
	.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout {
		--flex-1: var(--flex-sm-1, var(--flex-sm, var(--flex-default)));
		--flex-2: var(--flex-sm-2, var(--flex-sm, var(--flex-default)));
		--flex-3: var(--flex-sm-3, var(--flex-sm, var(--flex-default)));
		--flex-4: var(--flex-sm-4, var(--flex-sm, var(--flex-default)));
		--flex-5: var(--flex-sm-5, var(--flex-sm, var(--flex-default)));
		--flex-6: var(--flex-sm-6, var(--flex-sm, var(--flex-default)));
		--flex-7: var(--flex-sm-7, var(--flex-sm, var(--flex-default)));
		--flex-8: var(--flex-sm-8, var(--flex-sm, var(--flex-default)));
		--flex-9: var(--flex-sm-9, var(--flex-sm, var(--flex-default)));
		--flex-10: var(--flex-sm-10, var(--flex-sm, var(--flex-default)));
		--flex-11: var(--flex-sm-11, var(--flex-sm, var(--flex-default)));
		--flex-12: var(--flex-sm-12, var(--flex-sm, var(--flex-default)));
		--flex-13: var(--flex-sm-13, var(--flex-sm, var(--flex-default)));
		--flex-14: var(--flex-sm-14, var(--flex-sm, var(--flex-default)));
		--flex-15: var(--flex-sm-15, var(--flex-sm, var(--flex-default)));
		--flex-16: var(--flex-sm-16, var(--flex-sm, var(--flex-default)));
		--flex-17: var(--flex-sm-17, var(--flex-sm, var(--flex-default)));
		--flex-18: var(--flex-sm-18, var(--flex-sm, var(--flex-default)));
		--flex-19: var(--flex-sm-19, var(--flex-sm, var(--flex-default)));
		--flex-20: var(--flex-sm-20, var(--flex-sm, var(--flex-default)));
		--flex-21: var(--flex-sm-21, var(--flex-sm, var(--flex-default)));
		--flex-22: var(--flex-sm-22, var(--flex-sm, var(--flex-default)));
		--flex-23: var(--flex-sm-23, var(--flex-sm, var(--flex-default)));
		--flex-24: var(--flex-sm-24, var(--flex-sm, var(--flex-default)));
	}
}

@include mq(md, lg) {

	.has-columns:not(.has-columns-nested) > .is-column,
	.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout {
		--flex-1: var(--flex-md-1, var(--flex-md, var(--flex-default)));
		--flex-2: var(--flex-md-2, var(--flex-md, var(--flex-default)));
		--flex-3: var(--flex-md-3, var(--flex-md, var(--flex-default)));
		--flex-4: var(--flex-md-4, var(--flex-md, var(--flex-default)));
		--flex-5: var(--flex-md-5, var(--flex-md, var(--flex-default)));
		--flex-6: var(--flex-md-6, var(--flex-md, var(--flex-default)));
		--flex-7: var(--flex-md-7, var(--flex-md, var(--flex-default)));
		--flex-8: var(--flex-md-8, var(--flex-md, var(--flex-default)));
		--flex-9: var(--flex-md-9, var(--flex-md, var(--flex-default)));
		--flex-10: var(--flex-md-10, var(--flex-md, var(--flex-default)));
		--flex-11: var(--flex-md-11, var(--flex-md, var(--flex-default)));
		--flex-12: var(--flex-md-12, var(--flex-md, var(--flex-default)));
		--flex-13: var(--flex-md-13, var(--flex-md, var(--flex-default)));
		--flex-14: var(--flex-md-14, var(--flex-md, var(--flex-default)));
		--flex-15: var(--flex-md-15, var(--flex-md, var(--flex-default)));
		--flex-16: var(--flex-md-16, var(--flex-md, var(--flex-default)));
		--flex-17: var(--flex-md-17, var(--flex-md, var(--flex-default)));
		--flex-18: var(--flex-md-18, var(--flex-md, var(--flex-default)));
		--flex-19: var(--flex-md-19, var(--flex-md, var(--flex-default)));
		--flex-20: var(--flex-md-20, var(--flex-md, var(--flex-default)));
		--flex-21: var(--flex-md-21, var(--flex-md, var(--flex-default)));
		--flex-22: var(--flex-md-22, var(--flex-md, var(--flex-default)));
		--flex-23: var(--flex-md-23, var(--flex-md, var(--flex-default)));
		--flex-24: var(--flex-md-24, var(--flex-md, var(--flex-default)));
	}
}

@include mq(lg) {

	.has-columns:not(.has-columns-nested) > .is-column,
	.has-columns-nested > .block-editor-inner-blocks > .block-editor-block-list__layout {
		--flex-1: var(--flex-lg-1, var(--flex-lg, var(--flex-default)));
		--flex-2: var(--flex-lg-2, var(--flex-lg, var(--flex-default)));
		--flex-3: var(--flex-lg-3, var(--flex-lg, var(--flex-default)));
		--flex-4: var(--flex-lg-4, var(--flex-lg, var(--flex-default)));
		--flex-5: var(--flex-lg-5, var(--flex-lg, var(--flex-default)));
		--flex-6: var(--flex-lg-6, var(--flex-lg, var(--flex-default)));
		--flex-7: var(--flex-lg-7, var(--flex-lg, var(--flex-default)));
		--flex-8: var(--flex-lg-8, var(--flex-lg, var(--flex-default)));
		--flex-9: var(--flex-lg-9, var(--flex-lg, var(--flex-default)));
		--flex-10: var(--flex-lg-10, var(--flex-lg, var(--flex-default)));
		--flex-11: var(--flex-lg-11, var(--flex-lg, var(--flex-default)));
		--flex-12: var(--flex-lg-12, var(--flex-lg, var(--flex-default)));
		--flex-13: var(--flex-lg-13, var(--flex-lg, var(--flex-default)));
		--flex-14: var(--flex-lg-14, var(--flex-lg, var(--flex-default)));
		--flex-15: var(--flex-lg-15, var(--flex-lg, var(--flex-default)));
		--flex-16: var(--flex-lg-16, var(--flex-lg, var(--flex-default)));
		--flex-17: var(--flex-lg-17, var(--flex-lg, var(--flex-default)));
		--flex-18: var(--flex-lg-18, var(--flex-lg, var(--flex-default)));
		--flex-19: var(--flex-lg-19, var(--flex-lg, var(--flex-default)));
		--flex-20: var(--flex-lg-20, var(--flex-lg, var(--flex-default)));
		--flex-21: var(--flex-lg-21, var(--flex-lg, var(--flex-default)));
		--flex-22: var(--flex-lg-22, var(--flex-lg, var(--flex-default)));
		--flex-23: var(--flex-lg-23, var(--flex-lg, var(--flex-default)));
		--flex-24: var(--flex-lg-24, var(--flex-lg, var(--flex-default)));
	}
}

// Mai Accordion.

.wp-block[data-type="acf/mai-accordion-item"] {
	margin-bottom: var(--row-gap);
}

.wp-block[data-type="acf/mai-accordion-item"] .mai-accordion-item {
	margin-bottom: 0;
}

.wp-block[data-type="acf/mai-accordion-item"] + .wp-block[data-type="acf/mai-accordion-item"] {
	margin-top: 0;
}
