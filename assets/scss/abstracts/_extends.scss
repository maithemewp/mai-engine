@mixin body {
	color: var(--body-color, var(--color-body));
	font-weight: var(--body-font-weight, unset);
	font-size: var(--body-font-size, var(--font-size-md));
	font-family: var(--body-font-family, unset);
	font-style: var(--body-font-style, normal);
	line-height: var(--body-line-height, 1.625); // Perfect fourth.
	background: var(--body-background-color, var(--color-background));
}

@mixin heading {
	margin-top: var(--heading-margin-top, 0);
	margin-bottom: var(--heading-margin-bottom, var(--spacing-md));
	color: var(--heading-color, var(--color-heading));
	font-weight: var(--heading-font-weight, unset);
	font-family: var(--heading-font-family, unset);
	font-style: var(--heading-font-style, normal);
	line-height: var(--heading-line-height, 1.219); // Perfect fourth.
	letter-spacing: var(--heading-letter-spacing, normal);
	text-transform: var(--heading-text-transform, none);

	@include mq(false, md) {
		word-break: var(--heading-word-break, break-word);
	}

	&:last-child {
		--heading-margin-bottom: 0;
	}

	.entry-content > &:not(:first-child) {
		--heading-margin-top: var(--spacing-xxl);
	}
}

@mixin button($is_admin: false) {
	position: relative;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	width: var(--button-width, auto);
	margin: var(--button-margin, 0);
	padding: var(--button-padding, 0.9em 2em);
	color: var(--button-color); // Color contrast automatically generated.
	font-weight: var(--button-font-weight, var(--body-font-weight));
	font-size: var(--button-font-size, var(--font-size-base));
	font-family: var(--button-font-family, var(--body-font-family));
	line-height: var(--button-line-height, 1.1);
	letter-spacing: var(--button-letter-spacing, normal);
	white-space: var(--button-white-space, normal);
	text-align: var(--button-text-align, center);
	text-transform: var(--button-text-transform, none);
	text-decoration: var(--button-text-decoration, none);
	word-break: var(--button-word-break, normal);
	overflow-wrap: var(--button-overflow-wrap, break-word);
	background: var(--button-background, var(--color-primary));
	border: var(--button-border, 0);
	border-radius: var(--button-border-radius, var(--border-radius));
	outline: var(--button-outline, none);
	box-shadow: var(--button-box-shadow, none);
	transform: var(--button-transform, none);
	cursor: var(--button-cursor, pointer);
	opacity: var(--button-opacity, 1);
	transition: var(--button-transition, var(--transition));

	// Ordered via https://css-tricks.com/snippets/css/link-pseudo-classes-in-order/
	&:hover,
	&:active,
	&:focus {
		color: var(--button-color-hover, var(--button-color));
		text-decoration: var(--button-text-decoration-hover, var(--button-text-decoration, none));
		background: var(--button-background-hover, var(--color-primary-dark, var(--button-background, var(--color-primary))));
		border: var(--button-border-hover, var(--button-border, 0));
		outline: var(--button-outline-hover, var(--button-outline, none));
		box-shadow: var(--button-box-shadow-hover, var(--button-box-shadow, none));
		transform: var(--button-transform-hover, var(--button-transform, none));
	}

	// Disable background color on hover.
	@if ($is_admin) {

		@include hover-focus {
			--button-background-hover: var(--button-background, var(--color-primary));
		}
	}
}

@mixin button-style($style, $is_admin: false) {

	@if ("secondary" == $style) {
		--button-color: var(--button-secondary-color); // Color contrast automatically generated.
		--button-color-hover: var(--button-secondary-color-hover, var(--button-secondary-color));
		--button-background: var(--button-secondary-background, var(--color-secondary));
		--button-background-hover: var(--button-secondary-background-hover, var(--color-secondary-dark, var(--color-secondary)));
	}

	@if ("outline" == $style) {
		--button-color: var(--button-outline-color, var(--color-primary));
		--button-color-hover: var(--button-outline-color-hover, var(--color-white));
		--button-background: var(--button-outline-background, transparent);
		--button-background-hover: var(--button-outline-background-hover, var(--button-outline-color, var(--button-color)));
		--button-line-height: calc(1em - 4px); // Makes height same as button with no border.
		--button-border: 2px solid var(--button-outline-color, var(--button-color));
		--button-border-hover: var(--button-border);
	}

	@if ("link" == $style) {
		--button-color: var(--button-link-color, var(--color-link));
		--button-color-hover: var(--button-link-color-hover, var(--color-link-dark, var(--link-color-hover, var(--color-link-dark))));
		--button-background: var(--button-link-background, transparent);
		--button-background-hover: var(--button-link-background-hover, transparent);
		--button-padding: var(--button-link-padding, 0.9em 0.5em);
		--button-border: 0;
		--button-box-shadow: 0;

		&::after {
			display: var(--button-link-after-display, inline-block);
			margin-left: var(--spacing-xs);
			content: "\2192";
		}

		&:first-child:last-child {
			padding-right: 0;
			padding-left: 0;
		}
	}

	@if ("small" == $style) {
		padding: var(--button-small-padding, (0.75em 1.25em));
		font-size: var(--button-small-font-size, (0.75em)); // Default buttons use font-base so can't use scale.
	}

	@if ("large" == $style) {
		padding: var(--button-large-padding, (1.25em 2.5em));
		font-size: var(--button-large-font-size, (1.25em)); // Default buttons use font-base so can't use scale.
	}

	@if ("disabled" == $style) {
		cursor: not-allowed;
		opacity: 0.5;
	}

	@if ($is_admin) {
		color: var(--button-color);
		background: var(--button-background);
		border-color: var(--button-border, currentColor);
	}
}

@mixin caption() {
	color: var(--caption-color, var(--color-body));
	font-size: var(--caption-font-size, var(--font-size-xs));
	text-align: var(--caption-text-align, (center));
}

@mixin cite() {
	color: var(--cite-color, var(--color-body));
	font-weight: var(--cite-font-weight, bolder);
	font-size: var(--cite-font-size, 0.8em);
	font-family: var(--cite-font-family, var(--heading-font-family));
	font-style: var(--cite-font-style, normal);
}
